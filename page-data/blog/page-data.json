{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx",
    "path": "/blog",
    "result": {"data":{"allPost":{"nodes":[{"slug":"/mybatis-plus结合sharding-jdbc使用时出现的问题记录","title":"mybatisPlus结合sharding jdbc使用时出现的问题记录","date":"25.11.2021","excerpt":"背景 使用mybatisplus提供的枚举序列化功能, 将枚举值映射为数据库值, 结合sharding jdbc使用时, 枚举值无法反序列化赋值到对象中 mybatisplus版本 3.4.3.1 sharding jdbc版本 4.1.1 原因 直接来看mybatisplus…","timeToRead":1,"description":null,"tags":null},{"slug":"/hashids","title":"Hashids","date":"07.10.2021","excerpt":"最近被一个短链服务坑了, 生成短码的时候使用了hash, 但是没有考虑冲突的情况, 导致固定链接短链生成失败. 没办法, 只能去改源链接碰碰运气避免冲突了 通过这个问题我们顺便来看一下Hashids是如何生成短码的. 常见的短码生成策略 哈希算法 将长网址md5生成3…","timeToRead":1,"description":null,"tags":[{"name":"Hashids","slug":"hashids"}]},{"slug":"/redis滑动窗口限流分析实现","title":"Redis滑动窗口限流分析实现","date":"07.09.2021","excerpt":"背景 需要对业务进行固定时间窗口内限流, 并且要求足够精确 (单机版全部pass) 需要限制的业务key范围特别广, 会导致消耗大量的内存, 在存储上要尽量保证精简.  高性能(至少支撑5000TPS) 实现 公司的基础设施中目前只有redis…","timeToRead":1,"description":null,"tags":[{"name":"Redis","slug":"redis"}]},{"slug":"/mybatis框架分析","title":"mybatis框架分析","date":"10.04.2021","excerpt":"mybatis架构 接口层 接口层是MyBatis提供给开发人员的一套API.主要使用SqlSession接口. 数据处理层 数据处理层是MyBatis框架内部的核心实现.来完成对映射文件的解析与数据处理:  参数解析与参数绑定 SQL…","timeToRead":1,"description":null,"tags":[{"name":"mybatis","slug":"mybatis"}]}]}},"pageContext":{"formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}